{"ast":null,"code":"var _jsxFileName = \"/Users/asiacole/Desktop/dCC-CODE/Projects/GRO/GROapp/groapp/src/components/Register/Register.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Register = () => {\n  _s();\n\n  const [name, setName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [dob, setDob] = useState(\"\");\n  const [ssn, setSsn] = useState(\"\");\n\n  const handleSubmit = async () => {\n    let data = {\n      name: name,\n      email: email,\n      password: password,\n      dob: dob,\n      ssn: ssn\n    };\n\n    try {\n      let response = await axios.post(\"http://localhost:2000/api/accounts/\", data);\n      localStorage.setItem(\"token\", response.headers[\"x-auth-token\"]); // window.location = \"/\";\n\n      console.log(response);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"Full Name:\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"name\",\n        value: name,\n        onChange: e => setName(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"Email:\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"email\",\n        value: email,\n        onChange: e => setEmail(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"Password:\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"password\",\n        value: password,\n        onChange: e => setPassword(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"DOB:\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"dob\",\n        value: dob,\n        onChange: e => setDob(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"SSN:\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"ssn\",\n        value: ssn,\n        onChange: e => setSsn(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"submit\",\n      value: \"Submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Register, \"itDVe8w71QArYQRof/bVk1nP6fA=\");\n\n_c = Register;\nexport default Register; // function Register(props) {\n//   const username = useFormInput('');\n//   const password = useFormInput('');\n//   const fullname = useFormInput('');\n//   const email = useFormInput('');\n//   const dob = useFormInput('');\n//   const ssn = useFormInput('');\n//   const [error, setError] = useState(null);\n//   const [loading, setLoading] = useState(false);\n//   // handle button click of Register form\n//   const handleRegister = () => {\n//     props.history.push('/dashboard');\n//   }\n//   return (\n//     <div>\n//       Register<br /><br />\n//       <div>\n//         Username:<br />\n//         <input type=\"text\" {...username} autoComplete=\"new-password\" />\n//       </div>\n//       <div>\n//         Full Name:<br />\n//         <input type=\"text\" {...fullname} autoComplete=\"new-password\" />\n//       </div>\n//       <div>\n//         Email:<br />\n//         <input type=\"text\" {...email} autoComplete=\"new-password\" />\n//       </div>\n//       <div>\n//         Date of Birth:<br />\n//         <input type=\"text\" {...dob} autoComplete=\"new-password\" />\n//       </div>\n//       <div>\n//         SSN:<br />\n//         <input type=\"text\" {...ssn} autoComplete=\"new-password\" />\n//       </div>\n//       <div style={{ marginTop: 10 }}>\n//         Password<br />\n//         <input type=\"password\" {...password} autoComplete=\"new-password\" />\n//       </div>\n//       {error && <><small style={{ color: 'red' }}>{error}</small><br /></>}<br />\n//       <input type=\"button\" value={loading ? 'Loading...' : 'Register'} onClick={handleRegister} disabled={loading} /><br />\n//     </div>\n//   );\n// }\n// const useFormInput = initialValue => {\n//   const [value, setValue] = useState(initialValue);\n//   const handleChange = e => {\n//     setValue(e.target.value);\n//   }\n//   return {\n//     value,\n//     onChange: handleChange\n//   }\n// }\n\nvar _c;\n\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"sources":["/Users/asiacole/Desktop/dCC-CODE/Projects/GRO/GROapp/groapp/src/components/Register/Register.jsx"],"names":["React","useState","axios","Register","name","setName","email","setEmail","password","setPassword","dob","setDob","ssn","setSsn","handleSubmit","data","response","post","localStorage","setItem","headers","console","log","error","e","target","value"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport axios from 'axios';\n\nconst Register = () => {\n    const [name, setName] = useState(\"\");\n    const [email, setEmail] = useState(\"\");\n    const [password, setPassword] = useState(\"\");\n    const [dob, setDob] = useState(\"\");\n    const [ssn, setSsn] = useState(\"\");\n\n    const handleSubmit = async () => {\n        let data = {\n            name: name,\n            email: email,\n            password: password,\n            dob: dob,\n            ssn: ssn,\n        };\n        try {\n            let response = await axios.post(\"http://localhost:2000/api/accounts/\", data);\n            localStorage.setItem(\"token\", response.headers[\"x-auth-token\"]);\n            // window.location = \"/\";\n            console.log(response);\n        } catch (error) {\n            console.log(error);\n        }\n    };\n\n    return ( \n        \n        <form onSubmit={handleSubmit}>\n            <label>\n                Full Name:\n                <input\n                    type=\"text\"\n                    name=\"name\"\n                    value={name}\n                    onChange={(e) => setName(e.target.value)}\n                    />\n            </label>\n            <label>\n                Email:\n                <input\n                    type=\"text\"\n                    name=\"email\"\n                    value={email}\n                    onChange={(e) => setEmail(e.target.value)}\n                    />\n            </label>\n            <label>\n                Password:\n                <input\n                    type=\"text\"\n                    name=\"password\"\n                    value={password}\n                    onChange={(e) => setPassword(e.target.value)}\n                    />\n            </label>\n            <label>\n                DOB:\n                <input\n                    type=\"text\"\n                    name=\"dob\"\n                    value={dob}\n                    onChange={(e) => setDob(e.target.value)}\n                    />\n            </label>\n            <label>\n                SSN:\n                <input\n                    type=\"text\"\n                    name=\"ssn\"\n                    value={ssn}\n                    onChange={(e) => setSsn(e.target.value)}\n                    />\n            </label>\n            <input type=\"submit\" value=\"Submit\" />\n        </form>\n     );\n}\n \nexport default Register;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n// function Register(props) {\n//   const username = useFormInput('');\n//   const password = useFormInput('');\n//   const fullname = useFormInput('');\n//   const email = useFormInput('');\n//   const dob = useFormInput('');\n//   const ssn = useFormInput('');\n//   const [error, setError] = useState(null);\n//   const [loading, setLoading] = useState(false);\n \n//   // handle button click of Register form\n//   const handleRegister = () => {\n//     props.history.push('/dashboard');\n//   }\n \n//   return (\n//     <div>\n//       Register<br /><br />\n//       <div>\n//         Username:<br />\n//         <input type=\"text\" {...username} autoComplete=\"new-password\" />\n//       </div>\n//       <div>\n//         Full Name:<br />\n//         <input type=\"text\" {...fullname} autoComplete=\"new-password\" />\n//       </div>\n//       <div>\n//         Email:<br />\n//         <input type=\"text\" {...email} autoComplete=\"new-password\" />\n//       </div>\n//       <div>\n//         Date of Birth:<br />\n//         <input type=\"text\" {...dob} autoComplete=\"new-password\" />\n//       </div>\n//       <div>\n//         SSN:<br />\n//         <input type=\"text\" {...ssn} autoComplete=\"new-password\" />\n//       </div>\n//       <div style={{ marginTop: 10 }}>\n//         Password<br />\n//         <input type=\"password\" {...password} autoComplete=\"new-password\" />\n//       </div>\n//       {error && <><small style={{ color: 'red' }}>{error}</small><br /></>}<br />\n//       <input type=\"button\" value={loading ? 'Loading...' : 'Register'} onClick={handleRegister} disabled={loading} /><br />\n//     </div>\n//   );\n// }\n \n// const useFormInput = initialValue => {\n//   const [value, setValue] = useState(initialValue);\n \n//   const handleChange = e => {\n//     setValue(e.target.value);\n//   }\n//   return {\n//     value,\n//     onChange: handleChange\n//   }\n// }\n \n \n\n\n"]},"metadata":{},"sourceType":"module"}